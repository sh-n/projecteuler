/System/Library/Frameworks/Python.framework/Versions/2.7/bin/python2.7 /Users/vivek/projecteuler/python/134/problem_134a.py
('start', 5)
('start', 7)
('start', 47)
('start', 89)
('start', 43)
('start', 53)
('start', 87)
('start', 59)
('start', 63)
('start', 57)
('start', 87)
('start', 69)
('start', 99)
('start', 67)
('start', 19)
('start', 83)
('start', 77)
('start', 27)
('start', 87)
('start', 13)
('start', 47)
('start', 37)
('start', 97)
('start', 467)
('start', 29)
('start', 423)
('start', 293)
('start', 119)
('start', 917)
('start', 563)
('start', 483)
('start', 511)
('start', 299)
('start', 243)
('start', 639)
('start', 989)
('start', 579)
('start', 487)
('start', 559)
('start', 891)
('start', 887)
('start', 869)
('start', 403)
('start', 309)
('start', 557)
('start', 349)
('start', 263)
('start', 413)
('start', 47)
('start', 279)
('start', 491)
('start', 643)
('start', 39)
('start', 27)
('start', 739)
('start', 723)
('start', 517)
('start', 107)
('start', 431)
('start', 799)
('start', 837)
('start', 247)
('start', 389)
('start', 7)
('start', 363)
('start', 171)
('start', 703)
('start', 933)
('start', 767)
('start', 377)
('start', 379)
('start', 687)
('start', 813)
('start', 947)
('start', 137)
('start', 597)
('start', 89)
('start', 211)
('start', 39)
('start', 291)
('start', 807)
('start', 247)
('start', 773)
('start', 707)
('start', 257)
('start', 437)
('start', 947)
('start', 789)
('start', 573)
('start', 617)
('start', 557)
('start', 9)
('start', 333)
('start', 667)
('start', 429)
('start', 827)
('start', 903)
('start', 703)
('start', 71)
('start', 239)
('start', 827)
('start', 339)
('start', 923)
('start', 771)
('start', 259)
('start', 607)
('start', 199)
('start', 543)
('start', 939)
('start', 189)
('start', 43)
('start', 749)
('start', 391)
('start', 987)
('start', 69)
('start', 99)
('start', 567)
('start', 119)
('start', 157)
('start', 549)
('start', 919)
('start', 713)
('start', 991)
('start', 489)
('start', 211)
('start', 697)
('start', 619)
('start', 47)
('start', 573)
('start', 993)
('start', 643)
('start', 637)
('start', 369)
('start', 653)
('start', 879)
('start', 671)
('start', 933)
('start', 419)
('start', 191)
('start', 227)
('start', 949)
('start', 463)
('start', 411)
('start', 763)
('start', 29)
('start', 923)
('start', 293)
('start', 619)
('start', 917)
('start', 907)
('start', 709)
('start', 141)
('start', 237)
('start', 569)
('start', 311)
('start', 17)
('start', 357)
('start', 303)
('start', 299)
('start', 759)
('start', 277)
('start', 523)
('start', 119)
('start', 113)
('start', 3)
[35, 77, 611, 1513, 817, 1219, 2523, 1829, 2331, 2337, 3741, 3243, 5247, 3953, 1159, 5561, 5467, 1971, 6873, 1079, 4183, 3589, 9797, 48101, 3103, 46107, 33109, 15113, 120127, 77131, 67137, 76139, 45149, 38151, 104157, 165163, 100167, 87173, 101179, 170181, 171191, 171193, 80197, 65199, 124211, 79223, 60227, 96229, 11233, 67239, 123241, 165251, 10257, 7263, 200269, 200271, 145277, 30281, 126283, 245293, 260307, 77311, 123313, 2317, 122331, 59337, 245347, 329349, 275353, 138359, 141367, 260373, 311379, 368383, 54389, 239397, 36401, 88409, 16419, 125421, 349431, 108433, 342439, 317443, 117449, 201457, 438461, 368463, 274467, 300479, 273487, 4491, 167499, 339503, 223509, 432521, 488523, 384541, 39547, 134557, 470563, 193569, 532571, 452577, 153587, 363593, 119599, 329601, 575607, 116613, 26617, 472619, 250631, 634641, 44643, 64647, 373653, 78659, 105661, 371673, 627677, 492683, 694691, 346701, 151709, 506719, 453727, 34733, 425739, 745743, 486751, 484757, 283761, 504769, 691773, 534787, 754797, 339809, 156811, 186821, 784823, 383827, 344829, 650839, 24853, 792857, 252859, 542863, 807877, 800881, 628883, 127887, 215907, 522911, 288919, 15929, 335937, 286941, 284947, 733953, 268967, 510971, 116977, 111983, 2991]
36605225
Run time...0.0687 secs 


Process finished with exit code 0



for i in xrange(0,limit-1):
    num1 = prime_numbers[i]
    num2 = prime_numbers[i+1]
    #for j in xrange(i+1, limit):

    #print("num1", num1)
    found = 0
    start = 2
    while not found:
        number = str(num2*start)
        if number.endswith(str(num1)):
            answers.append(int(number))
            #print number
            found = 1
            print("start",start)

        start += 1
